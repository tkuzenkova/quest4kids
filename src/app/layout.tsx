import { Geist, Geist_Mono } from "next/font/google";

import { ReactQueryProvider } from "@/components/providers/QueryClientProvider";

import { DictionaryProvider } from "@/components/providers/DictionaryProvider";
import { getTheme } from "@/core/utils/getTheme";
import "@/styles/globals.css";
import { getDictionary } from "get-dictionary";
import { ToastContainer } from "react-toastify";
import { DICTIONARY_PATH } from "../core/consts";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

// export async function generateStaticParams() {
// 	return i18n.locales.map(locale => ({ lang: locale }));
// }

export default async function Root(props: { children: React.ReactNode }) {
	const dictionary = await getDictionary(DICTIONARY_PATH.HEADER);

	const { isDarkMode } = await getTheme();

	const { children } = props;

	return (
		<html lang="en" className={isDarkMode ? "dark" : ""}>
			<body
				className={`${geistSans.variable} ${geistMono.variable} dark:bg-dark-900 bg-slate-50 text-slate-900 antialiased dark:text-white`}
			>
				<ReactQueryProvider>
					<DictionaryProvider dictionary={dictionary}>
						{children}
						<ToastContainer />
					</DictionaryProvider>
				</ReactQueryProvider>
			</body>
		</html>
	);
}
